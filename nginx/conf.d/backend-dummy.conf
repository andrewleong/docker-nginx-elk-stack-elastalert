# upstream backend-app {
#   # least_conn;
#   # server app:5000;
#   server 192.168.65.3:5000;
#   server 192.168.104.66:8001;
# }

# upstream app {
#     server 127.0.0.1:8000;
# }

# log_format my_upstream '$remote_addr [$time_local] "$request" $status'
#   '"$upstream_addr" $upstream_response_time $upstream_http_etag';

log_format my_upstream '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent" "$gzip_ratio"';

server {
    listen 80;
    # My wifi ip add
    server_name 192.168.0.109;

    # server_name localhost $hostname;
    # server_name  localhost;
    # access_log /var/log/nginx/upstream.log my_upstream;
    # error_log /var/log/nginx/upstream-error.log;

    # server_name backend-app.com;


    # access_log /var/log/nginx/my-upstream.log my_upstream;
    # error_log /var/log/nginx/error.log;
    # resolver 192.168.0.109;

    location / {
      # proxy_pass http://uni-vmsvr30038:7000/;
      # resolver 8.8.8.8;
      # proxy_pass http://127.0.0.1:5000/;

      # proxy_set_header X-Forwarded-For $remote_addr;
      # proxy_set_header Host $http_host;
      # # Docker network ls to see backend's ip
      # proxy_pass "http://192.168.65.3:8000";

      set $upstream_endpoint http://192.168.65.3:8000;
      proxy_pass $upstream_endpoint;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Host $server_name;

    }


}
